{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","id","text","date","handleDeleteNote","className","size","onClick","AddNote","handleAddNote","useState","noteText","setNotetext","characterCount","setCharacterDown","rows","cols","placeholder","value","onChange","event","count","target","length","trim","NoteList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","nanoid","setNotes","searchtext","setSearchText","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","filter","toLowerCase","includes","newNote","Date","toLocaleDateString","newNotes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.718bcf0f.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\n\nconst Note = ({ id, text, date, handleDeleteNote }) => {\n  return (\n    <div className=\"note\">\n      <span>{text}</span>\n      <div className=\"note-footer\">\n        <small>{date}</small>\n        <MdDeleteForever\n          key={id}\n          className=\"delete-icon\"\n          size=\"1.3em\"\n          onClick={() => handleDeleteNote(id)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import { useState } from \"react\";\n\nconst AddNote = ({ handleAddNote }) => {\n  const [noteText, setNotetext] = useState(\"\");\n  const [characterCount, setCharacterDown] = useState(200);\n  const characterLimit = 200;\n\n  const handleChange = (event) => {\n    const count = 200 - event.target.value.length;\n    setCharacterDown(count);\n    if (count >= 1) {\n      setNotetext(event.target.value);\n    }\n  };\n\n  const handleSaveClick = () => {\n    if (noteText.trim().length > 0) {\n      handleAddNote(noteText);\n      setNotetext(\"\");\n      setCharacterDown(200);\n    }\n  };\n\n  return (\n    <div className=\"note new\">\n      <textarea\n        rows=\"8\"\n        cols=\"10\"\n        placeholder=\"New note...\"\n        value={noteText}\n        onChange={handleChange}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>{characterCount} Remaining</small>\n        <button onClick={handleSaveClick} className=\"save\">\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nconst NoteList = ({ notes, handleAddNote, handleDeleteNote }) => {\n  return (\n    <div className=\"notes-list\">\n      {notes.map((note) => {\n        return (\n          <Note\n            id={note.id}\n            text={note.text}\n            date={note.date}\n            handleDeleteNote={handleDeleteNote}\n          />\n        );\n      })}\n      <AddNote handleAddNote={handleAddNote} />\n    </div>\n  );\n};\n\nexport default NoteList;\n","import React from \"react\";\nimport { MdSearch } from \"react-icons/md\";\n\nconst Search = ({ handleSearchNote }) => {\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\n      <input\n        onChange={(event) => handleSearchNote(event.target.value)}\n        type=\"text\"\n        placeholder=\"type to search note\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","import react from \"react\";\n\nconst Header = ({ handleToggleDarkMode }) => {\n  return (\n    <div className=\"header\">\n      <h1>Notes</h1>\n      <button\n        className=\"save\"\n        onClick={() => {\n          handleToggleDarkMode((previousDarkMode) => !previousDarkMode);\n        }}\n      >\n        Toggle Mode\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import NoteList from \"./components/NotesList\";\nimport { useEffect, useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"Hello\",\n      date: \"15/10/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"Hello two\",\n      date: \"15/11/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"Hello three\",\n      date: \"15/13/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"Hello four\",\n      date: \"15/15/2021\",\n    },\n  ]);\n\n  const [searchtext, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      text: text,\n      date: date.toLocaleDateString(),\n      id: nanoid(),\n    };\n\n    const newNotes = [...notes, newNote];\n\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NoteList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchtext)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}